//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

/// 
/// This class was created from file C:\Users\mancealo\Documents\Sirius Quality\branches\RamiAprilCPModuleIrr\Code\SiriusQuality-IrradianceDomainClass\XML\INRA.SiriusQualityIrradiance.Interfaces_Exogenous.xml
/// The tool used was: DCC - Domain Class Coder, http://components.biomamodelling.org/, DCC
/// 
/// Loic Manceau
/// loic.manceau@inra.fr
/// INRA
/// 
/// 
/// 3/2/2018 2:46:30 PM
/// 
namespace INRA.SiriusQualityIrradiance.Interfaces
{
    using System;
    using System.Collections.Generic;
    using System.Reflection;
    using CRA.ModelLayer.Core;
    using CRA.ModelLayer.ParametersManagement;
    
    
    /// <summary>Exogenous Domain class contains the accessors to values</summary>
    [Serializable()]
    public class Exogenous : ICloneable, IDomainClass
    {
        
        #region Private fields
        private double[] _incidentDirectIrradiance = new double[24];
        
        private double[] _incidentDiffuseIrradiance = new double[24];
        
        private double[] _solarElevation = new double[24];
        
        private double[] _incidentDirectIrradianceNIR = new double[24];
        
        private double[] _incidentDirectIrradiancePAR = new double[24];
        
        private double[] _incidentDiffuseIrradianceNIR = new double[24];
        
        private double[] _incidentDiffuseIrradiancePAR = new double[24];
        #endregion
        
        #region Private field for properties
        private ParametersIO _parametersIO;
        #endregion
        
        #region Constructor
        /// <summary>No parameters constructor</summary>
        public Exogenous()
        {
            _parametersIO = new ParametersIO(this);
        }

        public Exogenous(Exogenous toCopy)
        {
            _solarElevation = new double[24];
            _incidentDirectIrradiance = new double[24];
            _incidentDiffuseIrradiance = new double[24];

            _incidentDirectIrradianceNIR = new double[24];
            _incidentDiffuseIrradianceNIR = new double[24];

            _incidentDirectIrradiancePAR = new double[24];
            _incidentDiffuseIrradiancePAR = new double[24];

            for (int i = 0; i < 24; i++)
            {
                _solarElevation[i] = toCopy._solarElevation[i];
                _incidentDirectIrradiance[i] = toCopy._incidentDirectIrradiance[i];
                _incidentDiffuseIrradiance[i] = toCopy._incidentDiffuseIrradiance[i];

                _incidentDirectIrradianceNIR[i] = toCopy._incidentDirectIrradianceNIR[i];
                _incidentDiffuseIrradianceNIR[i] = toCopy._incidentDiffuseIrradianceNIR[i];

                _incidentDirectIrradiancePAR[i] = toCopy._incidentDirectIrradiancePAR[i];
                _incidentDiffuseIrradiancePAR[i] = toCopy._incidentDiffuseIrradiancePAR[i];
            }

        }


        #endregion
        
        #region Public properties
        /// <summary>Incident beam irradiance</summary>
        public double[] incidentDirectIrradiance
        {
            get
            {
                return this._incidentDirectIrradiance;
            }
            set
            {
                this._incidentDirectIrradiance = value;
            }
        }
        
        /// <summary>Incident diffuse irradiance</summary>
        public double[] incidentDiffuseIrradiance
        {
            get
            {
                return this._incidentDiffuseIrradiance;
            }
            set
            {
                this._incidentDiffuseIrradiance = value;
            }
        }
        
        /// <summary>Solar elevation angle</summary>
        public double[] solarElevation
        {
            get
            {
                return this._solarElevation;
            }
            set
            {
                this._solarElevation = value;
            }
        }
        
        /// <summary>Incident beam irradiance for Near Infrared Radiations</summary>
        public double[] incidentDirectIrradianceNIR
        {
            get
            {
                return this._incidentDirectIrradianceNIR;
            }
            set
            {
                this._incidentDirectIrradianceNIR = value;
            }
        }
        
        /// <summary>Incident beam irradiance for Photosynthetically Active Radiations</summary>
        public double[] incidentDirectIrradiancePAR
        {
            get
            {
                return this._incidentDirectIrradiancePAR;
            }
            set
            {
                this._incidentDirectIrradiancePAR = value;
            }
        }
        
        /// <summary>Incident diffuse irradiance for Near Infrared Radiations</summary>
        public double[] incidentDiffuseIrradianceNIR
        {
            get
            {
                return this._incidentDiffuseIrradianceNIR;
            }
            set
            {
                this._incidentDiffuseIrradianceNIR = value;
            }
        }
        
        /// <summary>Incident diffuse irradiance for Photosynthetically Active Radiations</summary>
        public double[] incidentDiffuseIrradiancePAR
        {
            get
            {
                return this._incidentDiffuseIrradiancePAR;
            }
            set
            {
                this._incidentDiffuseIrradiancePAR = value;
            }
        }
        #endregion
        
        #region IDomainClass members
        /// <summary>Domain Class description</summary>
        public virtual  string Description
        {
            get
            {
                return "Domain class for Irradiance exogenous states";
            }
        }
        
        /// <summary>Domain Class URL</summary>
        public virtual  string URL
        {
            get
            {
                return "http://";
            }
        }
        
        /// <summary>Domain Class Properties</summary>
        public virtual IDictionary<string, PropertyInfo> PropertiesDescription
        {
            get
            {
                return _parametersIO.GetCachedProperties(typeof(IDomainClass));
            }
        }
        #endregion
        
        /// <summary>Clears the values of the properties of the domain class by using the default value for the type of each property (e.g '0' for numbers, 'the empty string' for strings, etc.)</summary>
        public virtual Boolean ClearValues()
        {
            _incidentDirectIrradiance = new double[24];
            _incidentDiffuseIrradiance = new double[24];
            _solarElevation = new double[24];
            _incidentDirectIrradianceNIR = new double[24];
            _incidentDirectIrradiancePAR = new double[24];
            _incidentDiffuseIrradianceNIR = new double[24];
            _incidentDiffuseIrradiancePAR = new double[24];
            // Returns true if everything is ok
            return true;
        }
        
        #region Clone
        /// <summary>Implement ICloneable.Clone()</summary>
        public virtual Object Clone()
        {
            // Shallow copy by default
            IDomainClass myclass = (IDomainClass) this.MemberwiseClone();
            _parametersIO.PopulateClonedCopy(myclass);
            return myclass;
        }
        #endregion
    }
}
