//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

/// 
/// This class was created from file C:\Users\loicm\GitSiriusCode\SiriusQuality\SiriusCode\Code\SiriusQuality-IrradianceDomainClass\XML\INRA.SiriusQualityIrradiance.Interfaces_Rates.xml
/// The tool used was: DCC - Domain Class Coder, http://components.biomamodelling.org/, DCC
/// 
/// Loic Manceau
/// loic.manceau@inrae.fr
/// INRAE
/// 
/// 
/// 24/04/2020 16:27:45
/// 
namespace INRA.SiriusQualityIrradiance.Interfaces
{
    using System;
    using CRA.ModelLayer.Core;
    
    
    /// <summary>RatesVarInfoClasses contain the attributes for each variable in the domain class RainData. Attributes are valorized via the static constructor. The data-type VarInfo causes  a dependency to the assembly CRA.Core.Preconditions.dll</summary>
    public class RatesVarInfo : IVarInfoClass
    {
        
        #region Private fields
        static VarInfo _absorbedGlobalIrradianceLayeredHourly = new VarInfo();
        
        static VarInfo _absorbedGlobalIrradiance = new VarInfo();
        
        static VarInfo _absorbedShadedIrradiance = new VarInfo();
        
        static VarInfo _absorbedSunlitIrradiance = new VarInfo();
        
        static VarInfo _absorbedIrradiance = new VarInfo();
        
        static VarInfo _absorbedIrradianceNIR = new VarInfo();
        
        static VarInfo _absorbedIrradiancePAR = new VarInfo();
        
        static VarInfo _absorbedGlobalIrradianceNIR = new VarInfo();
        
        static VarInfo _absorbedGlobalIrradiancePAR = new VarInfo();
        
        static VarInfo _absorbedDiffIrradiance = new VarInfo();
        
        static VarInfo _absorbedDirIrradiance = new VarInfo();
        
        static VarInfo _absorbedDiffIrradianceNIR = new VarInfo();
        
        static VarInfo _absorbedDiffIrradiancePAR = new VarInfo();
        
        static VarInfo _absorbedDirIrradianceNIR = new VarInfo();
        
        static VarInfo _absorbedDirIrradiancePAR = new VarInfo();
        #endregion
        
        /// <summary>Constructor</summary>
        static RatesVarInfo()
        {
            RatesVarInfo.DescribeVariables();
        }
        
        #region IVarInfoClass members
        /// <summary>Domain Class description</summary>
        public virtual  string Description
        {
            get
            {
                return "Domain class for Irradiance exogenous rates";
            }
        }
        
        /// <summary>Reference to the ontology</summary>
        public  string URL
        {
            get
            {
                return "http://";
            }
        }
        
        /// <summary>Value domain class of reference</summary>
        public  string DomainClassOfReference
        {
            get
            {
                return "Rates";
            }
        }
        #endregion
        
        #region Public properties
        /// <summary>Hourly absorbed  global irradiance per unit ground area layer by layer</summary>
        public static  VarInfo absorbedGlobalIrradianceLayeredHourly
        {
            get
            {
                return  _absorbedGlobalIrradianceLayeredHourly;
            }
        }
        
        /// <summary>Summary of absorbed global irradiance per unit ground area (generic varaible) </summary>
        public static  VarInfo absorbedGlobalIrradiance
        {
            get
            {
                return  _absorbedGlobalIrradiance;
            }
        }
        
        /// <summary>Summary of absorbed diffuse irradiance per unit ground area (generic varaible)</summary>
        public static  VarInfo absorbedShadedIrradiance
        {
            get
            {
                return  _absorbedShadedIrradiance;
            }
        }
        
        /// <summary>Summary of absorbed direct irradiance per unit ground area (generic varaible)</summary>
        public static  VarInfo absorbedSunlitIrradiance
        {
            get
            {
                return  _absorbedSunlitIrradiance;
            }
        }
        
        /// <summary>Summary of  direct an diffuse absorbed direct irradiance per unit ground area (generic varaible) </summary>
        public static  VarInfo absorbedIrradiance
        {
            get
            {
                return  _absorbedIrradiance;
            }
        }
        
        /// <summary>Summary of absorbed total irradiance per unit ground area (generic varaible)  for Near Infrared Radiations</summary>
        public static  VarInfo absorbedIrradianceNIR
        {
            get
            {
                return  _absorbedIrradianceNIR;
            }
        }
        
        /// <summary>Summary of absorbed total irradiance per unit ground area (generic varaible)  for Photosynthetically Active Radiations</summary>
        public static  VarInfo absorbedIrradiancePAR
        {
            get
            {
                return  _absorbedIrradiancePAR;
            }
        }
        
        /// <summary>Summary of absorbed global irradiance per unit ground area (generic varaible)  for Near Infrared Radiations</summary>
        public static  VarInfo absorbedGlobalIrradianceNIR
        {
            get
            {
                return  _absorbedGlobalIrradianceNIR;
            }
        }
        
        /// <summary>Summary of absorbed global irradiance per unit ground area (generic varaible)  for Photosyntetically Active Radiations</summary>
        public static  VarInfo absorbedGlobalIrradiancePAR
        {
            get
            {
                return  _absorbedGlobalIrradiancePAR;
            }
        }
        
        /// <summary>Summary of absorbed diffuse Irradiance</summary>
        public static  VarInfo absorbedDiffIrradiance
        {
            get
            {
                return  _absorbedDiffIrradiance;
            }
        }
        
        /// <summary>Summary of absorbed direct Irradiance</summary>
        public static  VarInfo absorbedDirIrradiance
        {
            get
            {
                return  _absorbedDirIrradiance;
            }
        }
        
        /// <summary>Summary of absorbed diffuse NIR Irradiance</summary>
        public static  VarInfo absorbedDiffIrradianceNIR
        {
            get
            {
                return  _absorbedDiffIrradianceNIR;
            }
        }
        
        /// <summary>Summary of absorbed diffuse PAR Irradiance</summary>
        public static  VarInfo absorbedDiffIrradiancePAR
        {
            get
            {
                return  _absorbedDiffIrradiancePAR;
            }
        }
        
        /// <summary>Summary of absorbed direct NIR Irradiance</summary>
        public static  VarInfo absorbedDirIrradianceNIR
        {
            get
            {
                return  _absorbedDirIrradianceNIR;
            }
        }
        
        /// <summary>Summary of absorbed direct PAR Irradiance</summary>
        public static  VarInfo absorbedDirIrradiancePAR
        {
            get
            {
                return  _absorbedDirIrradiancePAR;
            }
        }
        #endregion
        
        #region VarInfo values
        /// <summary>Set VarInfo values</summary>
        static void DescribeVariables()
        {
            //   
            _absorbedGlobalIrradianceLayeredHourly.Name = "absorbedGlobalIrradianceLayeredHourly";
            _absorbedGlobalIrradianceLayeredHourly.Description = "Hourly absorbed  global irradiance per unit ground area layer by layer";
            _absorbedGlobalIrradianceLayeredHourly.MaxValue = 1000D;
            _absorbedGlobalIrradianceLayeredHourly.MinValue = 0D;
            _absorbedGlobalIrradianceLayeredHourly.DefaultValue = 1D;
            _absorbedGlobalIrradianceLayeredHourly.Units = "MJ/(m² h layer)";
            _absorbedGlobalIrradianceLayeredHourly.URL = "http://";
            _absorbedGlobalIrradianceLayeredHourly.ValueType = VarInfoValueTypes.GetInstanceForName("DictionaryIntDouble");
            //   
            _absorbedGlobalIrradiance.Name = "absorbedGlobalIrradiance";
            _absorbedGlobalIrradiance.Description = "Summary of absorbed global irradiance per unit ground area (generic varaible) ";
            _absorbedGlobalIrradiance.MaxValue = 1000D;
            _absorbedGlobalIrradiance.MinValue = 0D;
            _absorbedGlobalIrradiance.DefaultValue = 1D;
            _absorbedGlobalIrradiance.Units = "MJ/(m² T Layer?)";
            _absorbedGlobalIrradiance.URL = "http://";
            _absorbedGlobalIrradiance.ValueType = VarInfoValueTypes.GetInstanceForName("DictionaryIntDouble");
            //   
            _absorbedShadedIrradiance.Name = "absorbedShadedIrradiance";
            _absorbedShadedIrradiance.Description = "Summary of absorbed diffuse irradiance per unit ground area (generic varaible)";
            _absorbedShadedIrradiance.MaxValue = 1000D;
            _absorbedShadedIrradiance.MinValue = 0D;
            _absorbedShadedIrradiance.DefaultValue = 1D;
            _absorbedShadedIrradiance.Units = "MJ/(m² T Layer?)";
            _absorbedShadedIrradiance.URL = "http://";
            _absorbedShadedIrradiance.ValueType = VarInfoValueTypes.GetInstanceForName("DictionaryIntDouble");
            //   
            _absorbedSunlitIrradiance.Name = "absorbedSunlitIrradiance";
            _absorbedSunlitIrradiance.Description = "Summary of absorbed direct irradiance per unit ground area (generic varaible)";
            _absorbedSunlitIrradiance.MaxValue = 1000D;
            _absorbedSunlitIrradiance.MinValue = 0D;
            _absorbedSunlitIrradiance.DefaultValue = 1D;
            _absorbedSunlitIrradiance.Units = "MJ/(m² T Layer?)";
            _absorbedSunlitIrradiance.URL = "http://";
            _absorbedSunlitIrradiance.ValueType = VarInfoValueTypes.GetInstanceForName("DictionaryIntDouble");
            //   
            _absorbedIrradiance.Name = "absorbedIrradiance";
            _absorbedIrradiance.Description = "Summary of  direct an diffuse absorbed direct irradiance per unit ground area (ge" +
                "neric varaible) ";
            _absorbedIrradiance.MaxValue = 1000D;
            _absorbedIrradiance.MinValue = 0D;
            _absorbedIrradiance.DefaultValue = 1D;
            _absorbedIrradiance.Units = "MJ/(m² T Layer?)";
            _absorbedIrradiance.URL = "http://";
            _absorbedIrradiance.ValueType = VarInfoValueTypes.GetInstanceForName("DictionaryIntDouble");
            //   
            _absorbedIrradianceNIR.Name = "absorbedIrradianceNIR";
            _absorbedIrradianceNIR.Description = "Summary of absorbed total irradiance per unit ground area (generic varaible)  for" +
                " Near Infrared Radiations";
            _absorbedIrradianceNIR.MaxValue = 1000D;
            _absorbedIrradianceNIR.MinValue = 0D;
            _absorbedIrradianceNIR.DefaultValue = 1D;
            _absorbedIrradianceNIR.Units = "MJ/(m² T Layer?)";
            _absorbedIrradianceNIR.URL = "http://";
            _absorbedIrradianceNIR.ValueType = VarInfoValueTypes.GetInstanceForName("DictionaryIntDouble");
            //   
            _absorbedIrradiancePAR.Name = "absorbedIrradiancePAR";
            _absorbedIrradiancePAR.Description = "Summary of absorbed total irradiance per unit ground area (generic varaible)  for" +
                " Photosynthetically Active Radiations";
            _absorbedIrradiancePAR.MaxValue = 1000D;
            _absorbedIrradiancePAR.MinValue = 0D;
            _absorbedIrradiancePAR.DefaultValue = 1D;
            _absorbedIrradiancePAR.Units = "MJ/(m² T Layer?)";
            _absorbedIrradiancePAR.URL = "http://";
            _absorbedIrradiancePAR.ValueType = VarInfoValueTypes.GetInstanceForName("DictionaryIntDouble");
            //   
            _absorbedGlobalIrradianceNIR.Name = "absorbedGlobalIrradianceNIR";
            _absorbedGlobalIrradianceNIR.Description = "Summary of absorbed global irradiance per unit ground area (generic varaible)  fo" +
                "r Near Infrared Radiations";
            _absorbedGlobalIrradianceNIR.MaxValue = 1000D;
            _absorbedGlobalIrradianceNIR.MinValue = 0D;
            _absorbedGlobalIrradianceNIR.DefaultValue = 1D;
            _absorbedGlobalIrradianceNIR.Units = "MJ/(m² T Layer?)";
            _absorbedGlobalIrradianceNIR.URL = "http://";
            _absorbedGlobalIrradianceNIR.ValueType = VarInfoValueTypes.GetInstanceForName("DictionaryIntDouble");
            //   
            _absorbedGlobalIrradiancePAR.Name = "absorbedGlobalIrradiancePAR";
            _absorbedGlobalIrradiancePAR.Description = "Summary of absorbed global irradiance per unit ground area (generic varaible)  fo" +
                "r Photosyntetically Active Radiations";
            _absorbedGlobalIrradiancePAR.MaxValue = 1000D;
            _absorbedGlobalIrradiancePAR.MinValue = 0D;
            _absorbedGlobalIrradiancePAR.DefaultValue = 1D;
            _absorbedGlobalIrradiancePAR.Units = "MJ/(m² T Layer?)";
            _absorbedGlobalIrradiancePAR.URL = "http://";
            _absorbedGlobalIrradiancePAR.ValueType = VarInfoValueTypes.GetInstanceForName("DictionaryIntDouble");
            //   
            _absorbedDiffIrradiance.Name = "absorbedDiffIrradiance";
            _absorbedDiffIrradiance.Description = "Summary of absorbed diffuse Irradiance";
            _absorbedDiffIrradiance.MaxValue = 1000D;
            _absorbedDiffIrradiance.MinValue = 0D;
            _absorbedDiffIrradiance.DefaultValue = 1D;
            _absorbedDiffIrradiance.Units = "MJ/(m² T Layer?)";
            _absorbedDiffIrradiance.URL = "http://";
            _absorbedDiffIrradiance.ValueType = VarInfoValueTypes.GetInstanceForName("Double");
            //   
            _absorbedDirIrradiance.Name = "absorbedDirIrradiance";
            _absorbedDirIrradiance.Description = "Summary of absorbed direct Irradiance";
            _absorbedDirIrradiance.MaxValue = 1000D;
            _absorbedDirIrradiance.MinValue = 0D;
            _absorbedDirIrradiance.DefaultValue = 1D;
            _absorbedDirIrradiance.Units = "MJ/(m² T Layer?)";
            _absorbedDirIrradiance.URL = "http://";
            _absorbedDirIrradiance.ValueType = VarInfoValueTypes.GetInstanceForName("DictionaryIntDouble");
            //   
            _absorbedDiffIrradianceNIR.Name = "absorbedDiffIrradianceNIR";
            _absorbedDiffIrradianceNIR.Description = "Summary of absorbed diffuse NIR Irradiance";
            _absorbedDiffIrradianceNIR.MaxValue = 1000D;
            _absorbedDiffIrradianceNIR.MinValue = 0D;
            _absorbedDiffIrradianceNIR.DefaultValue = 1D;
            _absorbedDiffIrradianceNIR.Units = "MJ/(m² T Layer?)";
            _absorbedDiffIrradianceNIR.URL = "http://";
            _absorbedDiffIrradianceNIR.ValueType = VarInfoValueTypes.GetInstanceForName("Double");
            //   
            _absorbedDiffIrradiancePAR.Name = "absorbedDiffIrradiancePAR";
            _absorbedDiffIrradiancePAR.Description = "Summary of absorbed diffuse PAR Irradiance";
            _absorbedDiffIrradiancePAR.MaxValue = 1000D;
            _absorbedDiffIrradiancePAR.MinValue = 0D;
            _absorbedDiffIrradiancePAR.DefaultValue = 1D;
            _absorbedDiffIrradiancePAR.Units = "MJ/(m² T Layer?)";
            _absorbedDiffIrradiancePAR.URL = "http://";
            _absorbedDiffIrradiancePAR.ValueType = VarInfoValueTypes.GetInstanceForName("Double");
            //   
            _absorbedDirIrradianceNIR.Name = "absorbedDirIrradianceNIR";
            _absorbedDirIrradianceNIR.Description = "Summary of absorbed direct NIR Irradiance";
            _absorbedDirIrradianceNIR.MaxValue = 1000D;
            _absorbedDirIrradianceNIR.MinValue = 0D;
            _absorbedDirIrradianceNIR.DefaultValue = 1D;
            _absorbedDirIrradianceNIR.Units = "MJ/(m² T Layer?)";
            _absorbedDirIrradianceNIR.URL = "http://";
            _absorbedDirIrradianceNIR.ValueType = VarInfoValueTypes.GetInstanceForName("DictionaryIntDouble");
            //   
            _absorbedDirIrradiancePAR.Name = "absorbedDirIrradiancePAR";
            _absorbedDirIrradiancePAR.Description = "Summary of absorbed direct PAR Irradiance";
            _absorbedDirIrradiancePAR.MaxValue = 1000D;
            _absorbedDirIrradiancePAR.MinValue = 0D;
            _absorbedDirIrradiancePAR.DefaultValue = 1D;
            _absorbedDirIrradiancePAR.Units = "MJ/(m² T Layer?)";
            _absorbedDirIrradiancePAR.URL = "http://";
            _absorbedDirIrradiancePAR.ValueType = VarInfoValueTypes.GetInstanceForName("DictionaryIntDouble");
        }
        #endregion
    }
}
